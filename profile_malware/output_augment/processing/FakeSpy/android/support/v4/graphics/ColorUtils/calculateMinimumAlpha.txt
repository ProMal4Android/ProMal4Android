# Landroid/support/v4/graphics/ColorUtils;->calculateMinimumAlpha(I I F)I [access_flags=public static]
#
# Parameters:
# - local registers: v0...v9
# - v10:int
# - v11:int
# - v12:float
#
# - return:int

calculateMinimumAlpha-BB@0x0 : [ calculateMinimumAlpha-BB@0x10 calculateMinimumAlpha-BB@0x4a ]
	0       (00000000) const/16             v8, 255
	1       (00000004) invoke-static        v11, Landroid/graphics/Color;->alpha(I)I
	2       (0000000a) move-result          v5
	3       (0000000c) if-eq                v5, v8, +1f

calculateMinimumAlpha-BB@0x10 : 
	4       (00000010) new-instance         v5, Ljava/lang/IllegalArgumentException;
	5       (00000014) new-instance         v8, Ljava/lang/StringBuilder;
	6       (00000018) invoke-direct        v8, Ljava/lang/StringBuilder;-><init>()V
	7       (0000001e) const-string         v9, 'background can not be translucent: #'
	8       (00000022) invoke-virtual       v8, v9, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
	9       (00000028) move-result-object   v8
	10      (0000002a) invoke-static        v11, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;
	11      (00000030) move-result-object   v9
	12      (00000032) invoke-virtual       v8, v9, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
	13      (00000038) move-result-object   v8
	14      (0000003a) invoke-virtual       v8, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
	15      (00000040) move-result-object   v8
	16      (00000042) invoke-direct        v5, v8, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V
	17      (00000048) throw                v5

calculateMinimumAlpha-BB@0x4a : [ calculateMinimumAlpha-BB@0x64 calculateMinimumAlpha-BB@0x68 ]
	18      (0000004a) invoke-static        v10, v8, Landroid/support/v4/graphics/ColorUtils;->setAlphaComponent(I I)I
	19      (00000050) move-result          v4
	20      (00000052) invoke-static        v4, v11, Landroid/support/v4/graphics/ColorUtils;->calculateContrast(I I)D
	21      (00000058) move-result-wide     v6
	22      (0000005a) float-to-double      v8, v12
	23      (0000005c) cmpg-double          v5, v6, v8
	24      (00000060) if-gez               v5, +4

calculateMinimumAlpha-BB@0x64 : [ calculateMinimumAlpha-BB@0x66 ]
	25      (00000064) const/4              v0, -1

calculateMinimumAlpha-BB@0x66 : 
	26      (00000066) return               v0

calculateMinimumAlpha-BB@0x68 : [ calculateMinimumAlpha-BB@0x70 ]
	27      (00000068) const/4              v2, 0
	28      (0000006a) const/4              v1, 0
	29      (0000006c) const/16             v0, 255

calculateMinimumAlpha-BB@0x70 : [ calculateMinimumAlpha-BB@0x78 calculateMinimumAlpha-BB@0x66 ]
	30      (00000070) const/16             v5, 10
	31      (00000074) if-gt                v2, v5, -7

calculateMinimumAlpha-BB@0x78 : [ calculateMinimumAlpha-BB@0x82 calculateMinimumAlpha-BB@0x66 ]
	32      (00000078) sub-int              v5, v0, v1
	33      (0000007c) const/4              v8, 1
	34      (0000007e) if-le                v5, v8, -c

calculateMinimumAlpha-BB@0x82 : [ calculateMinimumAlpha-BB@0xa4 calculateMinimumAlpha-BB@0xac ]
	35      (00000082) add-int              v5, v1, v0
	36      (00000086) div-int/lit8         v3, v5, 2
	37      (0000008a) invoke-static        v10, v3, Landroid/support/v4/graphics/ColorUtils;->setAlphaComponent(I I)I
	38      (00000090) move-result          v4
	39      (00000092) invoke-static        v4, v11, Landroid/support/v4/graphics/ColorUtils;->calculateContrast(I I)D
	40      (00000098) move-result-wide     v6
	41      (0000009a) float-to-double      v8, v12
	42      (0000009c) cmpg-double          v5, v6, v8
	43      (000000a0) if-gez               v5, +6

calculateMinimumAlpha-BB@0xa4 : [ calculateMinimumAlpha-BB@0xa6 ]
	44      (000000a4) move                 v1, v3

calculateMinimumAlpha-BB@0xa6 : [ calculateMinimumAlpha-BB@0x70 ]
	45      (000000a6) add-int/lit8         v2, v2, 1
	46      (000000aa) goto                 -1d

calculateMinimumAlpha-BB@0xac : [ calculateMinimumAlpha-BB@0xa6 ]
	47      (000000ac) move                 v0, v3
	48      (000000ae) goto                 -4

