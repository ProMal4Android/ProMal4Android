# Lorg/spongycastle/asn1/x500/style/IETFUtils;->valueFromHexString(Ljava/lang/String; I)Lorg/spongycastle/asn1/ASN1Encodable; [access_flags=public static]
#
# Parameters:
# - local registers: v0...v6
# - v7:java.lang.String
# - v8:int
#
# - return:org.spongycastle.asn1.ASN1Encodable

valueFromHexString-BB@0x0 : [ valueFromHexString-BB@0x20 ]
	0       (00000000) const/16             v6, 97
	1       (00000004) invoke-static        v7, Lorg/spongycastle/util/Strings;->toLowerCase(Ljava/lang/String;)Ljava/lang/String;
	2       (0000000a) move-result-object   v7
	3       (0000000c) invoke-virtual       v7, Ljava/lang/String;->length()I
	4       (00000012) move-result          v4
	5       (00000014) sub-int/2addr        v4, v8
	6       (00000016) div-int/lit8         v4, v4, 2
	7       (0000001a) new-array            v0, v4, [B
	8       (0000001e) const/4              v1, 0

valueFromHexString-BB@0x20 : [ valueFromHexString-BB@0x26 valueFromHexString-BB@0xa0 ]
	9       (00000020) array-length         v4, v0
	10      (00000022) if-eq                v1, v4, +3f

valueFromHexString-BB@0x26 : [ valueFromHexString-BB@0x4a valueFromHexString-BB@0x74 ]
	11      (00000026) mul-int/lit8         v4, v1, 2
	12      (0000002a) add-int/2addr        v4, v8
	13      (0000002c) invoke-virtual       v7, v4, Ljava/lang/String;->charAt(I)C
	14      (00000032) move-result          v2
	15      (00000034) mul-int/lit8         v4, v1, 2
	16      (00000038) add-int/2addr        v4, v8
	17      (0000003a) add-int/lit8         v4, v4, 1
	18      (0000003e) invoke-virtual       v7, v4, Ljava/lang/String;->charAt(I)C
	19      (00000044) move-result          v3
	20      (00000046) if-ge                v2, v6, +17

valueFromHexString-BB@0x4a : [ valueFromHexString-BB@0x58 ]
	21      (0000004a) add-int/lit8         v4, v2, -48
	22      (0000004e) shl-int/lit8         v4, v4, 4
	23      (00000052) int-to-byte          v4, v4
	24      (00000054) aput-byte            v4, v0, v1

valueFromHexString-BB@0x58 : [ valueFromHexString-BB@0x5c valueFromHexString-BB@0x88 ]
	25      (00000058) if-ge                v3, v6, +18

valueFromHexString-BB@0x5c : [ valueFromHexString-BB@0x6e ]
	26      (0000005c) aget-byte            v4, v0, v1
	27      (00000060) add-int/lit8         v5, v3, -48
	28      (00000064) int-to-byte          v5, v5
	29      (00000066) or-int/2addr         v4, v5
	30      (00000068) int-to-byte          v4, v4
	31      (0000006a) aput-byte            v4, v0, v1

valueFromHexString-BB@0x6e : [ valueFromHexString-BB@0x20 ]
	32      (0000006e) add-int/lit8         v1, v1, 1
	33      (00000072) goto                 -29

valueFromHexString-BB@0x74 : [ valueFromHexString-BB@0x58 ]
	34      (00000074) add-int/lit8         v4, v2, -97
	35      (00000078) add-int/lit8         v4, v4, 10
	36      (0000007c) shl-int/lit8         v4, v4, 4
	37      (00000080) int-to-byte          v4, v4
	38      (00000082) aput-byte            v4, v0, v1
	39      (00000086) goto                 -17

valueFromHexString-BB@0x88 : [ valueFromHexString-BB@0x6e ]
	40      (00000088) aget-byte            v4, v0, v1
	41      (0000008c) add-int/lit8         v5, v3, -97
	42      (00000090) add-int/lit8         v5, v5, 10
	43      (00000094) int-to-byte          v5, v5
	44      (00000096) or-int/2addr         v4, v5
	45      (00000098) int-to-byte          v4, v4
	46      (0000009a) aput-byte            v4, v0, v1
	47      (0000009e) goto                 -18

valueFromHexString-BB@0xa0 : 
	48      (000000a0) invoke-static        v0, Lorg/spongycastle/asn1/ASN1Primitive;->fromByteArray([B)Lorg/spongycastle/asn1/ASN1Primitive;
	49      (000000a6) move-result-object   v4
	50      (000000a8) return-object        v4

