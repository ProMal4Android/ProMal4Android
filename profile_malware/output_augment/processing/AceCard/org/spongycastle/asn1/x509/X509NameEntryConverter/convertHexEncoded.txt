# Lorg/spongycastle/asn1/x509/X509NameEntryConverter;->convertHexEncoded(Ljava/lang/String; I)Lorg/spongycastle/asn1/ASN1Primitive; [access_flags=protected]
#
# Parameters:
# - local registers: v0...v8
# - v9:java.lang.String
# - v10:int
#
# - return:org.spongycastle.asn1.ASN1Primitive

convertHexEncoded-BB@0x0 : [ convertHexEncoded-BB@0x20 ]
	0       (00000000) const/16             v7, 97
	1       (00000004) invoke-static        v9, Lorg/spongycastle/util/Strings;->toLowerCase(Ljava/lang/String;)Ljava/lang/String;
	2       (0000000a) move-result-object   v9
	3       (0000000c) invoke-virtual       v9, Ljava/lang/String;->length()I
	4       (00000012) move-result          v5
	5       (00000014) sub-int/2addr        v5, v10
	6       (00000016) div-int/lit8         v5, v5, 2
	7       (0000001a) new-array            v1, v5, [B
	8       (0000001e) const/4              v2, 0

convertHexEncoded-BB@0x20 : [ convertHexEncoded-BB@0x26 convertHexEncoded-BB@0xa0 ]
	9       (00000020) array-length         v5, v1
	10      (00000022) if-eq                v2, v5, +3f

convertHexEncoded-BB@0x26 : [ convertHexEncoded-BB@0x4a convertHexEncoded-BB@0x74 ]
	11      (00000026) mul-int/lit8         v5, v2, 2
	12      (0000002a) add-int/2addr        v5, v10
	13      (0000002c) invoke-virtual       v9, v5, Ljava/lang/String;->charAt(I)C
	14      (00000032) move-result          v3
	15      (00000034) mul-int/lit8         v5, v2, 2
	16      (00000038) add-int/2addr        v5, v10
	17      (0000003a) add-int/lit8         v5, v5, 1
	18      (0000003e) invoke-virtual       v9, v5, Ljava/lang/String;->charAt(I)C
	19      (00000044) move-result          v4
	20      (00000046) if-ge                v3, v7, +17

convertHexEncoded-BB@0x4a : [ convertHexEncoded-BB@0x58 ]
	21      (0000004a) add-int/lit8         v5, v3, -48
	22      (0000004e) shl-int/lit8         v5, v5, 4
	23      (00000052) int-to-byte          v5, v5
	24      (00000054) aput-byte            v5, v1, v2

convertHexEncoded-BB@0x58 : [ convertHexEncoded-BB@0x5c convertHexEncoded-BB@0x88 ]
	25      (00000058) if-ge                v4, v7, +18

convertHexEncoded-BB@0x5c : [ convertHexEncoded-BB@0x6e ]
	26      (0000005c) aget-byte            v5, v1, v2
	27      (00000060) add-int/lit8         v6, v4, -48
	28      (00000064) int-to-byte          v6, v6
	29      (00000066) or-int/2addr         v5, v6
	30      (00000068) int-to-byte          v5, v5
	31      (0000006a) aput-byte            v5, v1, v2

convertHexEncoded-BB@0x6e : [ convertHexEncoded-BB@0x20 ]
	32      (0000006e) add-int/lit8         v2, v2, 1
	33      (00000072) goto                 -29

convertHexEncoded-BB@0x74 : [ convertHexEncoded-BB@0x58 ]
	34      (00000074) add-int/lit8         v5, v3, -97
	35      (00000078) add-int/lit8         v5, v5, 10
	36      (0000007c) shl-int/lit8         v5, v5, 4
	37      (00000080) int-to-byte          v5, v5
	38      (00000082) aput-byte            v5, v1, v2
	39      (00000086) goto                 -17

convertHexEncoded-BB@0x88 : [ convertHexEncoded-BB@0x6e ]
	40      (00000088) aget-byte            v5, v1, v2
	41      (0000008c) add-int/lit8         v6, v4, -97
	42      (00000090) add-int/lit8         v6, v6, 10
	43      (00000094) int-to-byte          v6, v6
	44      (00000096) or-int/2addr         v5, v6
	45      (00000098) int-to-byte          v5, v5
	46      (0000009a) aput-byte            v5, v1, v2
	47      (0000009e) goto                 -18

convertHexEncoded-BB@0xa0 : 
	48      (000000a0) new-instance         v0, Lorg/spongycastle/asn1/ASN1InputStream;
	49      (000000a4) invoke-direct        v0, v1, Lorg/spongycastle/asn1/ASN1InputStream;-><init>([B)V
	50      (000000aa) invoke-virtual       v0, Lorg/spongycastle/asn1/ASN1InputStream;->readObject()Lorg/spongycastle/asn1/ASN1Primitive;
	51      (000000b0) move-result-object   v5
	52      (000000b2) return-object        v5

