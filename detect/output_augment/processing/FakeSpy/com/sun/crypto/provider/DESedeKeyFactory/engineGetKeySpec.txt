# Lcom/sun/crypto/provider/DESedeKeyFactory;->engineGetKeySpec(Ljavax/crypto/SecretKey; Ljava/lang/Class;)Ljava/security/spec/KeySpec; [access_flags=protected]
#
# Parameters:
# - local registers: v0...v2
# - v3:javax.crypto.SecretKey
# - v4:java.lang.Class
#
# - return:java.security.spec.KeySpec

engineGetKeySpec-BB@0x0 : [ engineGetKeySpec-BB@0x8 engineGetKeySpec-BB@0x80 ]
	0       (00000000) instance-of          v0, v3, Ljavax/crypto/SecretKey;
	1       (00000004) if-eqz               v0, +3e
	0:6d
	(Ljava/security/InvalidKeyException; -> 6e engineGetKeySpec-BB@0x6e)

engineGetKeySpec-BB@0x8 : [ engineGetKeySpec-BB@0x20 engineGetKeySpec-BB@0x80 ]
	2       (00000008) invoke-interface     v3, Ljavax/crypto/SecretKey;->getAlgorithm()Ljava/lang/String;
	3       (0000000e) move-result-object   v0
	4       (00000010) const-string         v1, 'DESede'
	5       (00000014) invoke-virtual       v0, v1, Ljava/lang/String;->equalsIgnoreCase(Ljava/lang/String;)Z
	6       (0000001a) move-result          v0
	7       (0000001c) if-eqz               v0, +32
	0:6d
	(Ljava/security/InvalidKeyException; -> 6e engineGetKeySpec-BB@0x6e)

engineGetKeySpec-BB@0x20 : [ engineGetKeySpec-BB@0x38 engineGetKeySpec-BB@0x80 ]
	8       (00000020) invoke-interface     v3, Ljavax/crypto/SecretKey;->getFormat()Ljava/lang/String;
	9       (00000026) move-result-object   v0
	10      (00000028) const-string         v1, 'RAW'
	11      (0000002c) invoke-virtual       v0, v1, Ljava/lang/String;->equalsIgnoreCase(Ljava/lang/String;)Z
	12      (00000032) move-result          v0
	13      (00000034) if-eqz               v0, +26
	0:6d
	(Ljava/security/InvalidKeyException; -> 6e engineGetKeySpec-BB@0x6e)

engineGetKeySpec-BB@0x38 : [ engineGetKeySpec-BB@0x4a engineGetKeySpec-BB@0x5e ]
	14      (00000038) const-class          v0, Ljavax/crypto/spec/DESedeKeySpec;
	15      (0000003c) nop                  
	16      (0000003e) invoke-virtual       v0, v4, Ljava/lang/Class;->isAssignableFrom(Ljava/lang/Class;)Z
	17      (00000044) move-result          v0
	18      (00000046) if-eqz               v0, +c
	0:6d
	(Ljava/security/InvalidKeyException; -> 6e engineGetKeySpec-BB@0x6e)

engineGetKeySpec-BB@0x4a : 
	19      (0000004a) new-instance         v0, Ljavax/crypto/spec/DESedeKeySpec;
	20      (0000004e) invoke-interface     v3, Ljavax/crypto/SecretKey;->getEncoded()[B
	21      (00000054) move-result-object   v1
	22      (00000056) invoke-direct        v0, v1, Ljavax/crypto/spec/DESedeKeySpec;-><init>([B)V
	23      (0000005c) return-object        v0
	0:6d
	(Ljava/security/InvalidKeyException; -> 6e engineGetKeySpec-BB@0x6e)

engineGetKeySpec-BB@0x5e : 
	24      (0000005e) new-instance         v0, Ljava/security/spec/InvalidKeySpecException;
	25      (00000062) const-string         v1, 'Inappropriate key specification'
	26      (00000066) invoke-direct        v0, v1, Ljava/security/spec/InvalidKeySpecException;-><init>(Ljava/lang/String;)V
	27      (0000006c) throw                v0
	0:6d
	(Ljava/security/InvalidKeyException; -> 6e engineGetKeySpec-BB@0x6e)

engineGetKeySpec-BB@0x6e : 
	28      (0000006e) move-exception       v0
	29      (00000070) new-instance         v0, Ljava/security/spec/InvalidKeySpecException;
	30      (00000074) const-string         v1, 'Secret key has wrong size'
	31      (00000078) invoke-direct        v0, v1, Ljava/security/spec/InvalidKeySpecException;-><init>(Ljava/lang/String;)V
	32      (0000007e) throw                v0

engineGetKeySpec-BB@0x80 : 
	33      (00000080) new-instance         v0, Ljava/security/spec/InvalidKeySpecException;
	34      (00000084) const-string         v1, 'Inappropriate key format/algorithm'
	35      (00000088) invoke-direct        v0, v1, Ljava/security/spec/InvalidKeySpecException;-><init>(Ljava/lang/String;)V
	36      (0000008e) throw                v0
	80:8f
	(Ljava/security/InvalidKeyException; -> 6e engineGetKeySpec-BB@0x6e)

